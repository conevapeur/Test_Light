//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/ANIMATIONS TEST/testANIM.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TestANIM : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TestANIM()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""testANIM"",
    ""maps"": [
        {
            ""name"": ""actions"",
            ""id"": ""1788ef6f-68e9-4c82-9dbd-8c63094cfb45"",
            ""actions"": [
                {
                    ""name"": ""card"",
                    ""type"": ""Button"",
                    ""id"": ""e813d09e-a0f4-4b54-ad5c-7915337b101a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""read"",
                    ""type"": ""Button"",
                    ""id"": ""864e857b-017e-4886-b135-95019e2e4f58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""wakeup"",
                    ""type"": ""Button"",
                    ""id"": ""446f4868-c038-434f-833e-396e2755ef03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""table"",
                    ""type"": ""Button"",
                    ""id"": ""c18ca853-3233-48e2-85f6-c8866b3d8926"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""chair"",
                    ""type"": ""Button"",
                    ""id"": ""bef9a5cc-921b-4340-b96b-670ffaa4c426"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""secu"",
                    ""type"": ""Button"",
                    ""id"": ""f327e385-8b89-49b8-bbc7-167bfbdea524"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""airduct"",
                    ""type"": ""Button"",
                    ""id"": ""f999c3e3-7936-4f65-85de-28cdd81168e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""stairs"",
                    ""type"": ""Button"",
                    ""id"": ""02c9fe8c-8c8c-4d41-a9ec-5415bff21cee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""talkie"",
                    ""type"": ""Button"",
                    ""id"": ""6d21fd09-2ffe-451b-9592-1e2a401c609e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""talk"",
                    ""type"": ""Button"",
                    ""id"": ""0728ad4f-9ce4-460d-91d7-01fedb179193"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""endtalk"",
                    ""type"": ""Button"",
                    ""id"": ""9f964d5e-05aa-45e9-b2a1-43bbf1c5617a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""talkieincrease"",
                    ""type"": ""Button"",
                    ""id"": ""9afb9d41-a132-4c11-8903-355bee10ffa9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""talkiedecrease"",
                    ""type"": ""Button"",
                    ""id"": ""ba99b46d-fd24-46d9-beca-58201666521b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""endtalkie"",
                    ""type"": ""Button"",
                    ""id"": ""3a4fca53-8a9d-496e-b412-f064293d6a8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""grab"",
                    ""type"": ""Button"",
                    ""id"": ""5bb03a7c-9df8-49aa-94f8-4cbd3229b4a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""push"",
                    ""type"": ""Button"",
                    ""id"": ""0b550d9e-9e86-426f-924e-758e8fcf047a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""endpush"",
                    ""type"": ""Button"",
                    ""id"": ""b6fd8a6e-4d6c-437b-9b17-1cd5b1ed2155"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""death"",
                    ""type"": ""Button"",
                    ""id"": ""e720abd8-8556-43d8-9792-ea63c365efaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""hand"",
                    ""type"": ""Button"",
                    ""id"": ""68169a9b-d207-4f47-9e82-765a00535ea3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""endhand"",
                    ""type"": ""Button"",
                    ""id"": ""7c685c1c-bc2c-4d0b-9a78-b1340d3c90c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""029ffdd4-ffe5-4175-8224-c31e3f6c301b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""card"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c11575f-6a84-4be9-b6aa-4a59b70b1eaa"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""read"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59402e38-84d0-441a-81ea-14af7551a07b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""wakeup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e698f9d4-3542-40dc-ad09-beffa09cb41e"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""table"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7bea3c4-a187-48e3-acf2-9a38b7c453f3"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""chair"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f1e8463-304e-4d10-b3cb-2e0087de99cb"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""secu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcd7381b-2819-4f09-9145-dbd50e169d76"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""airduct"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1677e04a-506a-4853-9b39-edeb05f704f1"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""stairs"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1fbb615-0b9c-4874-bde5-d5c529aa9c42"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""talkie"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d25ee7d-95e4-41c8-bf5a-eb6ec5f36a52"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""talk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ea2d030-fcb9-4d91-a5f4-5213461cf224"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""endtalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba633513-9213-43fc-93f8-70d4ab1b9013"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""talkieincrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2d47d15-c822-46f7-89e6-f6a745a2f566"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""talkiedecrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9a08b2f-dd1e-4a42-9933-b7a55420141c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""endtalkie"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00017289-15e9-4992-aaee-30c7397b5526"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b2bf3c0-3a4e-4706-bd54-231e960b9e3d"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""923b4d48-84e0-4adb-902d-e74f8f9d35e6"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""endpush"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""067c03d1-f942-4e85-bffd-074d49e3290e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""death"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5411b98-89d9-42a9-864a-124dfa6dbc84"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""hand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c80bd12-a100-44b9-b309-1d8d1f2c2caf"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""endhand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // actions
        m_actions = asset.FindActionMap("actions", throwIfNotFound: true);
        m_actions_card = m_actions.FindAction("card", throwIfNotFound: true);
        m_actions_read = m_actions.FindAction("read", throwIfNotFound: true);
        m_actions_wakeup = m_actions.FindAction("wakeup", throwIfNotFound: true);
        m_actions_table = m_actions.FindAction("table", throwIfNotFound: true);
        m_actions_chair = m_actions.FindAction("chair", throwIfNotFound: true);
        m_actions_secu = m_actions.FindAction("secu", throwIfNotFound: true);
        m_actions_airduct = m_actions.FindAction("airduct", throwIfNotFound: true);
        m_actions_stairs = m_actions.FindAction("stairs", throwIfNotFound: true);
        m_actions_talkie = m_actions.FindAction("talkie", throwIfNotFound: true);
        m_actions_talk = m_actions.FindAction("talk", throwIfNotFound: true);
        m_actions_endtalk = m_actions.FindAction("endtalk", throwIfNotFound: true);
        m_actions_talkieincrease = m_actions.FindAction("talkieincrease", throwIfNotFound: true);
        m_actions_talkiedecrease = m_actions.FindAction("talkiedecrease", throwIfNotFound: true);
        m_actions_endtalkie = m_actions.FindAction("endtalkie", throwIfNotFound: true);
        m_actions_grab = m_actions.FindAction("grab", throwIfNotFound: true);
        m_actions_push = m_actions.FindAction("push", throwIfNotFound: true);
        m_actions_endpush = m_actions.FindAction("endpush", throwIfNotFound: true);
        m_actions_death = m_actions.FindAction("death", throwIfNotFound: true);
        m_actions_hand = m_actions.FindAction("hand", throwIfNotFound: true);
        m_actions_endhand = m_actions.FindAction("endhand", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // actions
    private readonly InputActionMap m_actions;
    private IActionsActions m_ActionsActionsCallbackInterface;
    private readonly InputAction m_actions_card;
    private readonly InputAction m_actions_read;
    private readonly InputAction m_actions_wakeup;
    private readonly InputAction m_actions_table;
    private readonly InputAction m_actions_chair;
    private readonly InputAction m_actions_secu;
    private readonly InputAction m_actions_airduct;
    private readonly InputAction m_actions_stairs;
    private readonly InputAction m_actions_talkie;
    private readonly InputAction m_actions_talk;
    private readonly InputAction m_actions_endtalk;
    private readonly InputAction m_actions_talkieincrease;
    private readonly InputAction m_actions_talkiedecrease;
    private readonly InputAction m_actions_endtalkie;
    private readonly InputAction m_actions_grab;
    private readonly InputAction m_actions_push;
    private readonly InputAction m_actions_endpush;
    private readonly InputAction m_actions_death;
    private readonly InputAction m_actions_hand;
    private readonly InputAction m_actions_endhand;
    public struct ActionsActions
    {
        private @TestANIM m_Wrapper;
        public ActionsActions(@TestANIM wrapper) { m_Wrapper = wrapper; }
        public InputAction @card => m_Wrapper.m_actions_card;
        public InputAction @read => m_Wrapper.m_actions_read;
        public InputAction @wakeup => m_Wrapper.m_actions_wakeup;
        public InputAction @table => m_Wrapper.m_actions_table;
        public InputAction @chair => m_Wrapper.m_actions_chair;
        public InputAction @secu => m_Wrapper.m_actions_secu;
        public InputAction @airduct => m_Wrapper.m_actions_airduct;
        public InputAction @stairs => m_Wrapper.m_actions_stairs;
        public InputAction @talkie => m_Wrapper.m_actions_talkie;
        public InputAction @talk => m_Wrapper.m_actions_talk;
        public InputAction @endtalk => m_Wrapper.m_actions_endtalk;
        public InputAction @talkieincrease => m_Wrapper.m_actions_talkieincrease;
        public InputAction @talkiedecrease => m_Wrapper.m_actions_talkiedecrease;
        public InputAction @endtalkie => m_Wrapper.m_actions_endtalkie;
        public InputAction @grab => m_Wrapper.m_actions_grab;
        public InputAction @push => m_Wrapper.m_actions_push;
        public InputAction @endpush => m_Wrapper.m_actions_endpush;
        public InputAction @death => m_Wrapper.m_actions_death;
        public InputAction @hand => m_Wrapper.m_actions_hand;
        public InputAction @endhand => m_Wrapper.m_actions_endhand;
        public InputActionMap Get() { return m_Wrapper.m_actions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionsActions set) { return set.Get(); }
        public void SetCallbacks(IActionsActions instance)
        {
            if (m_Wrapper.m_ActionsActionsCallbackInterface != null)
            {
                @card.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCard;
                @card.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCard;
                @card.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnCard;
                @read.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnRead;
                @read.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnRead;
                @read.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnRead;
                @wakeup.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnWakeup;
                @wakeup.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnWakeup;
                @wakeup.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnWakeup;
                @table.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTable;
                @table.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTable;
                @table.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTable;
                @chair.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnChair;
                @chair.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnChair;
                @chair.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnChair;
                @secu.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSecu;
                @secu.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSecu;
                @secu.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnSecu;
                @airduct.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnAirduct;
                @airduct.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnAirduct;
                @airduct.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnAirduct;
                @stairs.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnStairs;
                @stairs.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnStairs;
                @stairs.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnStairs;
                @talkie.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkie;
                @talkie.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkie;
                @talkie.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkie;
                @talk.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalk;
                @talk.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalk;
                @talk.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalk;
                @endtalk.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndtalk;
                @endtalk.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndtalk;
                @endtalk.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndtalk;
                @talkieincrease.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkieincrease;
                @talkieincrease.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkieincrease;
                @talkieincrease.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkieincrease;
                @talkiedecrease.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkiedecrease;
                @talkiedecrease.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkiedecrease;
                @talkiedecrease.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnTalkiedecrease;
                @endtalkie.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndtalkie;
                @endtalkie.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndtalkie;
                @endtalkie.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndtalkie;
                @grab.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGrab;
                @grab.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGrab;
                @grab.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnGrab;
                @push.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnPush;
                @push.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnPush;
                @push.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnPush;
                @endpush.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndpush;
                @endpush.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndpush;
                @endpush.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndpush;
                @death.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDeath;
                @death.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDeath;
                @death.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnDeath;
                @hand.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnHand;
                @hand.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnHand;
                @hand.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnHand;
                @endhand.started -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndhand;
                @endhand.performed -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndhand;
                @endhand.canceled -= m_Wrapper.m_ActionsActionsCallbackInterface.OnEndhand;
            }
            m_Wrapper.m_ActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @card.started += instance.OnCard;
                @card.performed += instance.OnCard;
                @card.canceled += instance.OnCard;
                @read.started += instance.OnRead;
                @read.performed += instance.OnRead;
                @read.canceled += instance.OnRead;
                @wakeup.started += instance.OnWakeup;
                @wakeup.performed += instance.OnWakeup;
                @wakeup.canceled += instance.OnWakeup;
                @table.started += instance.OnTable;
                @table.performed += instance.OnTable;
                @table.canceled += instance.OnTable;
                @chair.started += instance.OnChair;
                @chair.performed += instance.OnChair;
                @chair.canceled += instance.OnChair;
                @secu.started += instance.OnSecu;
                @secu.performed += instance.OnSecu;
                @secu.canceled += instance.OnSecu;
                @airduct.started += instance.OnAirduct;
                @airduct.performed += instance.OnAirduct;
                @airduct.canceled += instance.OnAirduct;
                @stairs.started += instance.OnStairs;
                @stairs.performed += instance.OnStairs;
                @stairs.canceled += instance.OnStairs;
                @talkie.started += instance.OnTalkie;
                @talkie.performed += instance.OnTalkie;
                @talkie.canceled += instance.OnTalkie;
                @talk.started += instance.OnTalk;
                @talk.performed += instance.OnTalk;
                @talk.canceled += instance.OnTalk;
                @endtalk.started += instance.OnEndtalk;
                @endtalk.performed += instance.OnEndtalk;
                @endtalk.canceled += instance.OnEndtalk;
                @talkieincrease.started += instance.OnTalkieincrease;
                @talkieincrease.performed += instance.OnTalkieincrease;
                @talkieincrease.canceled += instance.OnTalkieincrease;
                @talkiedecrease.started += instance.OnTalkiedecrease;
                @talkiedecrease.performed += instance.OnTalkiedecrease;
                @talkiedecrease.canceled += instance.OnTalkiedecrease;
                @endtalkie.started += instance.OnEndtalkie;
                @endtalkie.performed += instance.OnEndtalkie;
                @endtalkie.canceled += instance.OnEndtalkie;
                @grab.started += instance.OnGrab;
                @grab.performed += instance.OnGrab;
                @grab.canceled += instance.OnGrab;
                @push.started += instance.OnPush;
                @push.performed += instance.OnPush;
                @push.canceled += instance.OnPush;
                @endpush.started += instance.OnEndpush;
                @endpush.performed += instance.OnEndpush;
                @endpush.canceled += instance.OnEndpush;
                @death.started += instance.OnDeath;
                @death.performed += instance.OnDeath;
                @death.canceled += instance.OnDeath;
                @hand.started += instance.OnHand;
                @hand.performed += instance.OnHand;
                @hand.canceled += instance.OnHand;
                @endhand.started += instance.OnEndhand;
                @endhand.performed += instance.OnEndhand;
                @endhand.canceled += instance.OnEndhand;
            }
        }
    }
    public ActionsActions @actions => new ActionsActions(this);
    public interface IActionsActions
    {
        void OnCard(InputAction.CallbackContext context);
        void OnRead(InputAction.CallbackContext context);
        void OnWakeup(InputAction.CallbackContext context);
        void OnTable(InputAction.CallbackContext context);
        void OnChair(InputAction.CallbackContext context);
        void OnSecu(InputAction.CallbackContext context);
        void OnAirduct(InputAction.CallbackContext context);
        void OnStairs(InputAction.CallbackContext context);
        void OnTalkie(InputAction.CallbackContext context);
        void OnTalk(InputAction.CallbackContext context);
        void OnEndtalk(InputAction.CallbackContext context);
        void OnTalkieincrease(InputAction.CallbackContext context);
        void OnTalkiedecrease(InputAction.CallbackContext context);
        void OnEndtalkie(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
        void OnPush(InputAction.CallbackContext context);
        void OnEndpush(InputAction.CallbackContext context);
        void OnDeath(InputAction.CallbackContext context);
        void OnHand(InputAction.CallbackContext context);
        void OnEndhand(InputAction.CallbackContext context);
    }
}
